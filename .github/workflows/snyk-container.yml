name: Snyk Container Security Scan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    # Run weekly on Wednesday at 09:18 UTC
    - cron: '18 9 * * 3'

permissions: 
  # Explicit restrictive permissions following principle of least privilege
  contents: read
  security-events: write
  actions: read

jobs:
  snyk-container-scan:
    name: Snyk Container Analysis
    runs-on: ubuntu-latest
    
    # Prevent concurrent runs of the same workflow on the same branch
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: your/image-to-test:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Run Snyk Container Scan
        uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          # Optional: Add severity threshold
          SNYK_SEVERITY_THRESHOLD: high
        with:
          image: your/image-to-test:${{ github.sha }}
          args: |
            --file=Dockerfile
            --severity-threshold=${{ env.SNYK_SEVERITY_THRESHOLD }}
            --app-vulns
            --exclude-base-image-vulns
            
      - name: Upload SARIF result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        if: always()  # Ensure this runs even if Snyk scan fails
        with:
          sarif_file: snyk.sarif
          category: Snyk-Container
          
      - name: Cleanup
        if: always()
        run: |
          docker image rm your/image-to-test:${{ github.sha }} || true
