name: Security Analysis

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Job: Escaneo de contenedor con Snyk
  snyk-container-scan:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Login en Docker (si aplica)
      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # Paso 3: Construir imagen de Docker
      - name: Build Docker Image
        run: docker build -t my-container-image:latest .

      # Paso 4: Escaneo de contenedor con Snyk
      - name: Snyk Container Scan
        uses: snyk/actions/container@v1
        with:
          image: my-container-image:latest
          args: --file=Dockerfile --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  # Job: Análisis estático de seguridad con CodeQL
  codeql-analysis:
    needs: snyk-container-scan
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      # Paso 1: Checkout del repositorio
      - name: Checkout code
        uses: actions/checkout@v3

      # Paso 2: Configurar CodeQL
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript,python' # Lenguajes a analizar
          config-file: .github/codeql/codeql-config.yml # Opcional: archivo de configuración personalizado

      # Paso 3: Compilar el código (si es necesario)
      - name: Build the code
        run: |
          # Agrega comandos de compilación aquí (si aplica)
          echo "No build required"

      # Paso 4: Escanear el código
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: security
